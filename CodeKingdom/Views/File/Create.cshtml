@model CodeKingdom.Models.ViewModels.FileViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@{
    List<SelectListItem> typeList = new List<SelectListItem>();
    typeList.Add(new SelectListItem { Value = "javascript", Text = "JavaScript" });
    typeList.Add(new SelectListItem { Value = "html", Text = "HTML" });
    typeList.Add(new SelectListItem { Value = "css", Text = "CSS" });
    typeList.Add(new SelectListItem { Value = "cs", Text = "C#" });
    typeList.Add(new SelectListItem { Value = "c_cpp", Text = "C++" });
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProjectID)
       
    <div class="form-horizontal">
        <h4>File</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, typeList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FolderID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FolderID, Model.Folders, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FolderID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to editor", "Details", "Project", new { id = Model.ProjectID }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
