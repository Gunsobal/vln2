@model CodeKingdom.Models.ViewModels.EditorViewModel

@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/jPushMenu.css")

<div>
    <nav class="cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left">
        <div id="new-folder-file">
            @Html.ActionLink("New Folder", "Create", "Folder", new { id = Model.ProjectID }, new { })
            @Html.ActionLink("New File", "Create", "File", new { id = Model.ProjectID }, null)
        </div>
        <ul class="menu-list">
            <li><a class="tree-item" data-id="@Model.ProjectID" href="#">@Html.DisplayFor(model => model.Name) </a></li>
            
            <!--TODO: Fix structure - only showing files and then folders -->
            @foreach (var file in Model.Files)
            {
                <li>@Html.ActionLink(file.Name, "Details", "Project", new { id = Model.ProjectID, fileID = file.ID }, new { @class = (file.ID == Model.FileID ? Html.Raw("tree-item active") : Html.Raw("tree-item")), data_id = file.ID })</li>

            }

            @foreach (var folder in Model.Folders)
            {
                <li>@Html.ActionLink(folder.Name, "Details", null, new { @class = "tree-item", data_id = folder.ID })</li>
            }
        </ul>

        <!--TODO Implement the right click dude -->
        <div id="dialog">
            <select>
                <option></option>
            </select>
        </div>

        <div id="cntnr">
            <ul class="right-click-items">
                <li class="menu-item" ><a href="#" id="open-in-tab" class="new-tab" target="_blank">Open in new tab</a></li>
                <li class="menu-item" id="context-menu-edit">@Html.ActionLink("Edit", "Edit", new { id = Model.ProjectID })</li>
                <li class="menu-item" id="context-menu-delete" >@Html.ActionLink("Delete", "Delete", new { id = Model.ProjectID })</li>
                <li class="menu-item" ><a id="download" href="#">Download</a></li>
            </ul>
        </div>
    </nav>
    
    <!--Editor-->
    <div id="editor">@Html.Raw(Model.Content)</div>
    @using (Html.BeginForm("Save", "File", FormMethod.Post))
    {
        @Html.HiddenFor(model => model.Content, new { @id = "hidden_editor" })
        @Html.HiddenFor(model => model.FileID)
        @Html.AntiForgeryToken()
        <input type="submit" class="btn btn-save" value="Save" />
    }



    <h2>Chat</h2>
    <div class="container">
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
        <ul id="discussion"></ul>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/Scripts/jquery.signalR-2.2.2.min.js")
    @Scripts.Render("~/signalr/hubs")
    @Scripts.Render("https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.6/ace.js")
    @Scripts.Render("~/Scripts/jPushMenu.js")
    @Scripts.Render("~/Scripts/editor.js")

    <script>
        var fileID = @Model.FileID;
        
        $(document).ready(function() {
            var $navbar = $(".navbar-fixed-top");
            $(window).unbind('scroll');
            $navbar.addClass("top-nav-collapse");
        })
    </script>
}    